
TesteMultiplicadorCombinacional.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000008e  00800200  000008ea  0000095e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000008ea  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  000009ec  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a48  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000038  00000000  00000000  00000a88  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000ea4  00000000  00000000  00000ac0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000cf3  00000000  00000000  00001964  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000265  00000000  00000000  00002657  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000b0  00000000  00000000  000028bc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000649  00000000  00000000  0000296c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001e6  00000000  00000000  00002fb5  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  0000319b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	86 c0       	rjmp	.+268    	; 0x112 <__bad_interrupt>
   6:	00 00       	nop
   8:	84 c0       	rjmp	.+264    	; 0x112 <__bad_interrupt>
   a:	00 00       	nop
   c:	82 c0       	rjmp	.+260    	; 0x112 <__bad_interrupt>
   e:	00 00       	nop
  10:	80 c0       	rjmp	.+256    	; 0x112 <__bad_interrupt>
  12:	00 00       	nop
  14:	7e c0       	rjmp	.+252    	; 0x112 <__bad_interrupt>
  16:	00 00       	nop
  18:	7c c0       	rjmp	.+248    	; 0x112 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	7a c0       	rjmp	.+244    	; 0x112 <__bad_interrupt>
  1e:	00 00       	nop
  20:	78 c0       	rjmp	.+240    	; 0x112 <__bad_interrupt>
  22:	00 00       	nop
  24:	76 c0       	rjmp	.+236    	; 0x112 <__bad_interrupt>
  26:	00 00       	nop
  28:	74 c0       	rjmp	.+232    	; 0x112 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	72 c0       	rjmp	.+228    	; 0x112 <__bad_interrupt>
  2e:	00 00       	nop
  30:	70 c0       	rjmp	.+224    	; 0x112 <__bad_interrupt>
  32:	00 00       	nop
  34:	6e c0       	rjmp	.+220    	; 0x112 <__bad_interrupt>
  36:	00 00       	nop
  38:	6c c0       	rjmp	.+216    	; 0x112 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	6a c0       	rjmp	.+212    	; 0x112 <__bad_interrupt>
  3e:	00 00       	nop
  40:	68 c0       	rjmp	.+208    	; 0x112 <__bad_interrupt>
  42:	00 00       	nop
  44:	66 c0       	rjmp	.+204    	; 0x112 <__bad_interrupt>
  46:	00 00       	nop
  48:	64 c0       	rjmp	.+200    	; 0x112 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	62 c0       	rjmp	.+196    	; 0x112 <__bad_interrupt>
  4e:	00 00       	nop
  50:	60 c0       	rjmp	.+192    	; 0x112 <__bad_interrupt>
  52:	00 00       	nop
  54:	5e c0       	rjmp	.+188    	; 0x112 <__bad_interrupt>
  56:	00 00       	nop
  58:	5c c0       	rjmp	.+184    	; 0x112 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	5a c0       	rjmp	.+180    	; 0x112 <__bad_interrupt>
  5e:	00 00       	nop
  60:	58 c0       	rjmp	.+176    	; 0x112 <__bad_interrupt>
  62:	00 00       	nop
  64:	56 c0       	rjmp	.+172    	; 0x112 <__bad_interrupt>
  66:	00 00       	nop
  68:	54 c0       	rjmp	.+168    	; 0x112 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	52 c0       	rjmp	.+164    	; 0x112 <__bad_interrupt>
  6e:	00 00       	nop
  70:	50 c0       	rjmp	.+160    	; 0x112 <__bad_interrupt>
  72:	00 00       	nop
  74:	4e c0       	rjmp	.+156    	; 0x112 <__bad_interrupt>
  76:	00 00       	nop
  78:	4c c0       	rjmp	.+152    	; 0x112 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	4a c0       	rjmp	.+148    	; 0x112 <__bad_interrupt>
  7e:	00 00       	nop
  80:	48 c0       	rjmp	.+144    	; 0x112 <__bad_interrupt>
  82:	00 00       	nop
  84:	46 c0       	rjmp	.+140    	; 0x112 <__bad_interrupt>
  86:	00 00       	nop
  88:	44 c0       	rjmp	.+136    	; 0x112 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	42 c0       	rjmp	.+132    	; 0x112 <__bad_interrupt>
  8e:	00 00       	nop
  90:	40 c0       	rjmp	.+128    	; 0x112 <__bad_interrupt>
  92:	00 00       	nop
  94:	3e c0       	rjmp	.+124    	; 0x112 <__bad_interrupt>
  96:	00 00       	nop
  98:	3c c0       	rjmp	.+120    	; 0x112 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	3a c0       	rjmp	.+116    	; 0x112 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	38 c0       	rjmp	.+112    	; 0x112 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	36 c0       	rjmp	.+108    	; 0x112 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	34 c0       	rjmp	.+104    	; 0x112 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	32 c0       	rjmp	.+100    	; 0x112 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	30 c0       	rjmp	.+96     	; 0x112 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	2e c0       	rjmp	.+92     	; 0x112 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	2c c0       	rjmp	.+88     	; 0x112 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	2a c0       	rjmp	.+84     	; 0x112 <__bad_interrupt>
  be:	00 00       	nop
  c0:	28 c0       	rjmp	.+80     	; 0x112 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	26 c0       	rjmp	.+76     	; 0x112 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	24 c0       	rjmp	.+72     	; 0x112 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	22 c0       	rjmp	.+68     	; 0x112 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	20 c0       	rjmp	.+64     	; 0x112 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	1e c0       	rjmp	.+60     	; 0x112 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	1c c0       	rjmp	.+56     	; 0x112 <__bad_interrupt>
  da:	00 00       	nop
  dc:	1a c0       	rjmp	.+52     	; 0x112 <__bad_interrupt>
  de:	00 00       	nop
  e0:	18 c0       	rjmp	.+48     	; 0x112 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ea ee       	ldi	r30, 0xEA	; 234
  fc:	f8 e0       	ldi	r31, 0x08	; 8
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	ae 38       	cpi	r26, 0x8E	; 142
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>
 10e:	28 d0       	rcall	.+80     	; 0x160 <main>
 110:	ea c3       	rjmp	.+2004   	; 0x8e6 <_exit>

00000112 <__bad_interrupt>:
 112:	76 cf       	rjmp	.-276    	; 0x0 <__vectors>

00000114 <USART1SendByte>:
    UBRR1H=0x00;
    UBRR1L=103;
}

int USART1SendByte(char u8Data,FILE *stream)
{
 114:	cf 93       	push	r28
 116:	c8 2f       	mov	r28, r24
   if(u8Data == '\n')
 118:	8a 30       	cpi	r24, 0x0A	; 10
 11a:	11 f4       	brne	.+4      	; 0x120 <USART1SendByte+0xc>
      {
         USART1SendByte('\r',stream);
 11c:	8d e0       	ldi	r24, 0x0D	; 13
 11e:	fa df       	rcall	.-12     	; 0x114 <USART1SendByte>
      }
  // Espera byte anterior ser completado
  while(!(UCSR1A&(1<<UDRE1))){};
 120:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7000c8>
 124:	85 ff       	sbrs	r24, 5
 126:	fc cf       	rjmp	.-8      	; 0x120 <USART1SendByte+0xc>
  // Transmite o dado
  UDR1 = u8Data;
 128:	c0 93 ce 00 	sts	0x00CE, r28	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
  return 0;
}
 12c:	80 e0       	ldi	r24, 0x00	; 0
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	cf 91       	pop	r28
 132:	08 95       	ret

00000134 <USART1ReceiveByte>:

int USART1ReceiveByte(FILE *stream)
{
uint8_t u8Data;
   // Espera recepcao de byte
   while(!(UCSR1A&(1<<RXC1)));
 134:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7000c8>
 138:	88 23       	and	r24, r24
 13a:	e4 f7       	brge	.-8      	; 0x134 <USART1ReceiveByte>
   u8Data=UDR1;
 13c:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7000ce>
   // Retorna dado o recebido
   return u8Data;
}                             
 140:	90 e0       	ldi	r25, 0x00	; 0
 142:	08 95       	ret

00000144 <USART1Init>:
	       8 bits, 1 stop bit, sem paridade
		   Baud rate = 9600 bps
		   Interrupcoes por recepcao de caractere
	*/
	
	UCSR1A=(0<<RXC1) | (0<<TXC1) | (0<<UDRE1) | (0<<FE1) | (0<<DOR1) | (0<<UPE1) | (0<<U2X1) | (0<<MPCM1);
 144:	10 92 c8 00 	sts	0x00C8, r1	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7000c8>
    UCSR1B=(0<<RXCIE1) | (0<<TXCIE1) | (0<<UDRIE1) | (1<<RXEN1) | (1<<TXEN1) | (0<<UCSZ12) | (0<<RXB80) | (0<<TXB81);
 148:	88 e1       	ldi	r24, 0x18	; 24
 14a:	80 93 c9 00 	sts	0x00C9, r24	; 0x8000c9 <__TEXT_REGION_LENGTH__+0x7000c9>
    UCSR1C=(0<<UMSEL11) |(0<<UMSEL10) | (0<<UPM11) | (0<<UPM10) | (0<<USBS1) | (1<<UCSZ11) | (1<<UCSZ10) | (0<<UCPOL1);
 14e:	86 e0       	ldi	r24, 0x06	; 6
 150:	80 93 ca 00 	sts	0x00CA, r24	; 0x8000ca <__TEXT_REGION_LENGTH__+0x7000ca>
    UBRR1H=0x00;
 154:	10 92 cd 00 	sts	0x00CD, r1	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7000cd>
    UBRR1L=103;
 158:	87 e6       	ldi	r24, 0x67	; 103
 15a:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7000cc>
 15e:	08 95       	ret

00000160 <main>:
    unsigned int multiplicando;
	unsigned int multiplicador;
	unsigned int produto;
    unsigned long contador;
		
    DDRG=0xff;
 160:	8f ef       	ldi	r24, 0xFF	; 255
 162:	83 bb       	out	0x13, r24	; 19
	PORTG=0b00011111;
 164:	9f e1       	ldi	r25, 0x1F	; 31
 166:	94 bb       	out	0x14, r25	; 20
    DDRH=0xff;
 168:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <__TEXT_REGION_LENGTH__+0x700101>
    DDRJ=0xff;
 16c:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <__TEXT_REGION_LENGTH__+0x700104>
    DDRK=0x00;
 170:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <__TEXT_REGION_LENGTH__+0x700107>
    DDRL=0x00;
 174:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__TEXT_REGION_LENGTH__+0x70010a>
	
	USART1Init();
    contador=1;

    fprintf(&usart1_str,"Teste do multiplicador combinacional de 8 bits.\n");
 178:	e5 df       	rcall	.-54     	; 0x144 <USART1Init>
 17a:	20 e0       	ldi	r18, 0x00	; 0
 17c:	32 e0       	ldi	r19, 0x02	; 2
 17e:	40 e3       	ldi	r20, 0x30	; 48
 180:	50 e0       	ldi	r21, 0x00	; 0
 182:	61 e0       	ldi	r22, 0x01	; 1
 184:	70 e0       	ldi	r23, 0x00	; 0
 186:	8e e0       	ldi	r24, 0x0E	; 14
 188:	92 e0       	ldi	r25, 0x02	; 2
    fprintf(&usart1_str,"Iniciando o teste.\n\n");
 18a:	be d0       	rcall	.+380    	; 0x308 <fwrite>
 18c:	20 e0       	ldi	r18, 0x00	; 0
 18e:	32 e0       	ldi	r19, 0x02	; 2
 190:	44 e1       	ldi	r20, 0x14	; 20
 192:	50 e0       	ldi	r21, 0x00	; 0
 194:	61 e0       	ldi	r22, 0x01	; 1
 196:	70 e0       	ldi	r23, 0x00	; 0
 198:	8f e3       	ldi	r24, 0x3F	; 63
 19a:	92 e0       	ldi	r25, 0x02	; 2
    DDRJ=0xff;
    DDRK=0x00;
    DDRL=0x00;
	
	USART1Init();
    contador=1;
 19c:	b5 d0       	rcall	.+362    	; 0x308 <fwrite>
 19e:	81 2c       	mov	r8, r1
 1a0:	91 2c       	mov	r9, r1
 1a2:	54 01       	movw	r10, r8
    fprintf(&usart1_str,"Teste do multiplicador combinacional de 8 bits.\n");
    fprintf(&usart1_str,"Iniciando o teste.\n\n");

    while(1)
    {
       for(multiplicando=0;multiplicando<=0xff;multiplicando++)
 1a4:	83 94       	inc	r8
 1a6:	e1 2c       	mov	r14, r1
 1a8:	f1 2c       	mov	r15, r1
	       {
	         for(multiplicador=0x00;multiplicador <= 0xff;multiplicador++)      
	            {
	                PORTH=multiplicando; PORTJ=multiplicador;
 1aa:	51 c0       	rjmp	.+162    	; 0x24e <main+0xee>
 1ac:	e0 92 02 01 	sts	0x0102, r14	; 0x800102 <__TEXT_REGION_LENGTH__+0x700102>
 1b0:	00 93 05 01 	sts	0x0105, r16	; 0x800105 <__TEXT_REGION_LENGTH__+0x700105>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1b4:	25 e0       	ldi	r18, 0x05	; 5
 1b6:	2a 95       	dec	r18
 1b8:	f1 f7       	brne	.-4      	; 0x1b6 <main+0x56>
					_delay_us(1);
					produto=(unsigned int)PINK+(unsigned int)(PINL<<8);
 1ba:	00 00       	nop
 1bc:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__TEXT_REGION_LENGTH__+0x700106>
 1c0:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <__TEXT_REGION_LENGTH__+0x700109>
 1c4:	30 e0       	ldi	r19, 0x00	; 0
 1c6:	c3 2f       	mov	r28, r19
 1c8:	d9 2f       	mov	r29, r25
 1ca:	c8 0f       	add	r28, r24
		            fprintf(&usart1_str,"%x * %x = %x\n",multiplicando,multiplicador,produto);
 1cc:	d1 1d       	adc	r29, r1
 1ce:	df 93       	push	r29
 1d0:	cf 93       	push	r28
 1d2:	1f 93       	push	r17
 1d4:	0f 93       	push	r16
 1d6:	ff 92       	push	r15
 1d8:	ef 92       	push	r14
 1da:	84 e5       	ldi	r24, 0x54	; 84
 1dc:	92 e0       	ldi	r25, 0x02	; 2
 1de:	9f 93       	push	r25
 1e0:	8f 93       	push	r24
 1e2:	80 e0       	ldi	r24, 0x00	; 0
 1e4:	92 e0       	ldi	r25, 0x02	; 2
 1e6:	9f 93       	push	r25
 1e8:	8f 93       	push	r24
					if(produto!=multiplicando*multiplicador)
 1ea:	7f d0       	rcall	.+254    	; 0x2ea <fprintf>
 1ec:	e0 9e       	mul	r14, r16
 1ee:	c0 01       	movw	r24, r0
 1f0:	e1 9e       	mul	r14, r17
 1f2:	90 0d       	add	r25, r0
 1f4:	f0 9e       	mul	r15, r16
 1f6:	90 0d       	add	r25, r0
 1f8:	11 24       	eor	r1, r1
 1fa:	2d b7       	in	r18, 0x3d	; 61
 1fc:	3e b7       	in	r19, 0x3e	; 62
 1fe:	26 5f       	subi	r18, 0xF6	; 246
 200:	3f 4f       	sbci	r19, 0xFF	; 255
 202:	0f b6       	in	r0, 0x3f	; 63
 204:	f8 94       	cli
 206:	3e bf       	out	0x3e, r19	; 62
 208:	0f be       	out	0x3f, r0	; 63
 20a:	2d bf       	out	0x3d, r18	; 61
 20c:	c8 17       	cp	r28, r24
 20e:	d9 07       	cpc	r29, r25
						fprintf(&usart1_str,"Erro: produto correto = %x\n",multiplicando*multiplicador);
 210:	89 f0       	breq	.+34     	; 0x234 <main+0xd4>
 212:	9f 93       	push	r25
 214:	8f 93       	push	r24
 216:	82 e6       	ldi	r24, 0x62	; 98
 218:	92 e0       	ldi	r25, 0x02	; 2
 21a:	9f 93       	push	r25
 21c:	8f 93       	push	r24
 21e:	80 e0       	ldi	r24, 0x00	; 0
 220:	92 e0       	ldi	r25, 0x02	; 2
 222:	9f 93       	push	r25
 224:	8f 93       	push	r24
 226:	61 d0       	rcall	.+194    	; 0x2ea <fprintf>
 228:	0f 90       	pop	r0
 22a:	0f 90       	pop	r0
 22c:	0f 90       	pop	r0
 22e:	0f 90       	pop	r0
 230:	0f 90       	pop	r0

    while(1)
    {
       for(multiplicando=0;multiplicando<=0xff;multiplicando++)
	       {
	         for(multiplicador=0x00;multiplicador <= 0xff;multiplicador++)      
 232:	0f 90       	pop	r0
 234:	0f 5f       	subi	r16, 0xFF	; 255
 236:	1f 4f       	sbci	r17, 0xFF	; 255
 238:	02 c0       	rjmp	.+4      	; 0x23e <main+0xde>
 23a:	00 e0       	ldi	r16, 0x00	; 0
 23c:	10 e0       	ldi	r17, 0x00	; 0
 23e:	0f 3f       	cpi	r16, 0xFF	; 255
 240:	11 05       	cpc	r17, r1
 242:	09 f0       	breq	.+2      	; 0x246 <main+0xe6>
 244:	08 f4       	brcc	.+2      	; 0x248 <main+0xe8>
    fprintf(&usart1_str,"Teste do multiplicador combinacional de 8 bits.\n");
    fprintf(&usart1_str,"Iniciando o teste.\n\n");

    while(1)
    {
       for(multiplicando=0;multiplicando<=0xff;multiplicando++)
 246:	b2 cf       	rjmp	.-156    	; 0x1ac <main+0x4c>
 248:	3f ef       	ldi	r19, 0xFF	; 255
 24a:	e3 1a       	sub	r14, r19
 24c:	f3 0a       	sbc	r15, r19
 24e:	8f ef       	ldi	r24, 0xFF	; 255
 250:	e8 16       	cp	r14, r24
 252:	f1 04       	cpc	r15, r1
 254:	91 f3       	breq	.-28     	; 0x23a <main+0xda>
		            fprintf(&usart1_str,"%x * %x = %x\n",multiplicando,multiplicador,produto);
					if(produto!=multiplicando*multiplicador)
						fprintf(&usart1_str,"Erro: produto correto = %x\n",multiplicando*multiplicador);
				}
			}
		if((contador%1000)==0)fprintf(&usart1_str,"Ciclo No %lu \n",contador);
 256:	88 f3       	brcs	.-30     	; 0x23a <main+0xda>
 258:	c5 01       	movw	r24, r10
 25a:	b4 01       	movw	r22, r8
 25c:	28 ee       	ldi	r18, 0xE8	; 232
 25e:	33 e0       	ldi	r19, 0x03	; 3
 260:	40 e0       	ldi	r20, 0x00	; 0
 262:	50 e0       	ldi	r21, 0x00	; 0
 264:	20 d0       	rcall	.+64     	; 0x2a6 <__udivmodsi4>
 266:	67 2b       	or	r22, r23
 268:	68 2b       	or	r22, r24
 26a:	69 2b       	or	r22, r25
 26c:	b1 f4       	brne	.+44     	; 0x29a <main+0x13a>
 26e:	bf 92       	push	r11
 270:	af 92       	push	r10
 272:	9f 92       	push	r9
 274:	8f 92       	push	r8
 276:	8e e7       	ldi	r24, 0x7E	; 126
 278:	92 e0       	ldi	r25, 0x02	; 2
 27a:	9f 93       	push	r25
 27c:	8f 93       	push	r24
 27e:	80 e0       	ldi	r24, 0x00	; 0
 280:	92 e0       	ldi	r25, 0x02	; 2
 282:	9f 93       	push	r25
 284:	8f 93       	push	r24
 286:	31 d0       	rcall	.+98     	; 0x2ea <fprintf>
 288:	2d b7       	in	r18, 0x3d	; 61
 28a:	3e b7       	in	r19, 0x3e	; 62
 28c:	28 5f       	subi	r18, 0xF8	; 248
 28e:	3f 4f       	sbci	r19, 0xFF	; 255
 290:	0f b6       	in	r0, 0x3f	; 63
 292:	f8 94       	cli
 294:	3e bf       	out	0x3e, r19	; 62
 296:	0f be       	out	0x3f, r0	; 63
		contador++;
 298:	2d bf       	out	0x3d, r18	; 61
 29a:	3f ef       	ldi	r19, 0xFF	; 255
 29c:	83 1a       	sub	r8, r19
 29e:	93 0a       	sbc	r9, r19
 2a0:	a3 0a       	sbc	r10, r19
	}
 2a2:	b3 0a       	sbc	r11, r19
 2a4:	80 cf       	rjmp	.-256    	; 0x1a6 <main+0x46>

000002a6 <__udivmodsi4>:
 2a6:	a1 e2       	ldi	r26, 0x21	; 33
 2a8:	1a 2e       	mov	r1, r26
 2aa:	aa 1b       	sub	r26, r26
 2ac:	bb 1b       	sub	r27, r27
 2ae:	fd 01       	movw	r30, r26
 2b0:	0d c0       	rjmp	.+26     	; 0x2cc <__udivmodsi4_ep>

000002b2 <__udivmodsi4_loop>:
 2b2:	aa 1f       	adc	r26, r26
 2b4:	bb 1f       	adc	r27, r27
 2b6:	ee 1f       	adc	r30, r30
 2b8:	ff 1f       	adc	r31, r31
 2ba:	a2 17       	cp	r26, r18
 2bc:	b3 07       	cpc	r27, r19
 2be:	e4 07       	cpc	r30, r20
 2c0:	f5 07       	cpc	r31, r21
 2c2:	20 f0       	brcs	.+8      	; 0x2cc <__udivmodsi4_ep>
 2c4:	a2 1b       	sub	r26, r18
 2c6:	b3 0b       	sbc	r27, r19
 2c8:	e4 0b       	sbc	r30, r20
 2ca:	f5 0b       	sbc	r31, r21

000002cc <__udivmodsi4_ep>:
 2cc:	66 1f       	adc	r22, r22
 2ce:	77 1f       	adc	r23, r23
 2d0:	88 1f       	adc	r24, r24
 2d2:	99 1f       	adc	r25, r25
 2d4:	1a 94       	dec	r1
 2d6:	69 f7       	brne	.-38     	; 0x2b2 <__udivmodsi4_loop>
 2d8:	60 95       	com	r22
 2da:	70 95       	com	r23
 2dc:	80 95       	com	r24
 2de:	90 95       	com	r25
 2e0:	9b 01       	movw	r18, r22
 2e2:	ac 01       	movw	r20, r24
 2e4:	bd 01       	movw	r22, r26
 2e6:	cf 01       	movw	r24, r30
 2e8:	08 95       	ret

000002ea <fprintf>:
 2ea:	cf 93       	push	r28
 2ec:	df 93       	push	r29
 2ee:	cd b7       	in	r28, 0x3d	; 61
 2f0:	de b7       	in	r29, 0x3e	; 62
 2f2:	ae 01       	movw	r20, r28
 2f4:	46 5f       	subi	r20, 0xF6	; 246
 2f6:	5f 4f       	sbci	r21, 0xFF	; 255
 2f8:	68 85       	ldd	r22, Y+8	; 0x08
 2fa:	79 85       	ldd	r23, Y+9	; 0x09
 2fc:	8e 81       	ldd	r24, Y+6	; 0x06
 2fe:	9f 81       	ldd	r25, Y+7	; 0x07
 300:	45 d0       	rcall	.+138    	; 0x38c <vfprintf>
 302:	df 91       	pop	r29
 304:	cf 91       	pop	r28
 306:	08 95       	ret

00000308 <fwrite>:
 308:	8f 92       	push	r8
 30a:	9f 92       	push	r9
 30c:	af 92       	push	r10
 30e:	bf 92       	push	r11
 310:	cf 92       	push	r12
 312:	df 92       	push	r13
 314:	ef 92       	push	r14
 316:	ff 92       	push	r15
 318:	0f 93       	push	r16
 31a:	1f 93       	push	r17
 31c:	cf 93       	push	r28
 31e:	df 93       	push	r29
 320:	5b 01       	movw	r10, r22
 322:	4a 01       	movw	r8, r20
 324:	79 01       	movw	r14, r18
 326:	d9 01       	movw	r26, r18
 328:	13 96       	adiw	r26, 0x03	; 3
 32a:	2c 91       	ld	r18, X
 32c:	21 ff       	sbrs	r18, 1
 32e:	1d c0       	rjmp	.+58     	; 0x36a <fwrite+0x62>
 330:	c0 e0       	ldi	r28, 0x00	; 0
 332:	d0 e0       	ldi	r29, 0x00	; 0
 334:	c8 15       	cp	r28, r8
 336:	d9 05       	cpc	r29, r9
 338:	d9 f0       	breq	.+54     	; 0x370 <fwrite+0x68>
 33a:	8c 01       	movw	r16, r24
 33c:	6c 01       	movw	r12, r24
 33e:	ca 0c       	add	r12, r10
 340:	db 1c       	adc	r13, r11
 342:	c8 01       	movw	r24, r16
 344:	0c 15       	cp	r16, r12
 346:	1d 05       	cpc	r17, r13
 348:	71 f0       	breq	.+28     	; 0x366 <fwrite+0x5e>
 34a:	0f 5f       	subi	r16, 0xFF	; 255
 34c:	1f 4f       	sbci	r17, 0xFF	; 255
 34e:	d7 01       	movw	r26, r14
 350:	18 96       	adiw	r26, 0x08	; 8
 352:	ed 91       	ld	r30, X+
 354:	fc 91       	ld	r31, X
 356:	19 97       	sbiw	r26, 0x09	; 9
 358:	b7 01       	movw	r22, r14
 35a:	dc 01       	movw	r26, r24
 35c:	8c 91       	ld	r24, X
 35e:	19 95       	eicall
 360:	89 2b       	or	r24, r25
 362:	79 f3       	breq	.-34     	; 0x342 <fwrite+0x3a>
 364:	05 c0       	rjmp	.+10     	; 0x370 <fwrite+0x68>
 366:	21 96       	adiw	r28, 0x01	; 1
 368:	e5 cf       	rjmp	.-54     	; 0x334 <fwrite+0x2c>
 36a:	80 e0       	ldi	r24, 0x00	; 0
 36c:	90 e0       	ldi	r25, 0x00	; 0
 36e:	01 c0       	rjmp	.+2      	; 0x372 <fwrite+0x6a>
 370:	ce 01       	movw	r24, r28
 372:	df 91       	pop	r29
 374:	cf 91       	pop	r28
 376:	1f 91       	pop	r17
 378:	0f 91       	pop	r16
 37a:	ff 90       	pop	r15
 37c:	ef 90       	pop	r14
 37e:	df 90       	pop	r13
 380:	cf 90       	pop	r12
 382:	bf 90       	pop	r11
 384:	af 90       	pop	r10
 386:	9f 90       	pop	r9
 388:	8f 90       	pop	r8
 38a:	08 95       	ret

0000038c <vfprintf>:
 38c:	2f 92       	push	r2
 38e:	3f 92       	push	r3
 390:	4f 92       	push	r4
 392:	5f 92       	push	r5
 394:	6f 92       	push	r6
 396:	7f 92       	push	r7
 398:	8f 92       	push	r8
 39a:	9f 92       	push	r9
 39c:	af 92       	push	r10
 39e:	bf 92       	push	r11
 3a0:	cf 92       	push	r12
 3a2:	df 92       	push	r13
 3a4:	ef 92       	push	r14
 3a6:	ff 92       	push	r15
 3a8:	0f 93       	push	r16
 3aa:	1f 93       	push	r17
 3ac:	cf 93       	push	r28
 3ae:	df 93       	push	r29
 3b0:	cd b7       	in	r28, 0x3d	; 61
 3b2:	de b7       	in	r29, 0x3e	; 62
 3b4:	2b 97       	sbiw	r28, 0x0b	; 11
 3b6:	0f b6       	in	r0, 0x3f	; 63
 3b8:	f8 94       	cli
 3ba:	de bf       	out	0x3e, r29	; 62
 3bc:	0f be       	out	0x3f, r0	; 63
 3be:	cd bf       	out	0x3d, r28	; 61
 3c0:	6c 01       	movw	r12, r24
 3c2:	7b 01       	movw	r14, r22
 3c4:	8a 01       	movw	r16, r20
 3c6:	fc 01       	movw	r30, r24
 3c8:	17 82       	std	Z+7, r1	; 0x07
 3ca:	16 82       	std	Z+6, r1	; 0x06
 3cc:	83 81       	ldd	r24, Z+3	; 0x03
 3ce:	81 ff       	sbrs	r24, 1
 3d0:	bf c1       	rjmp	.+894    	; 0x750 <__LOCK_REGION_LENGTH__+0x350>
 3d2:	ce 01       	movw	r24, r28
 3d4:	01 96       	adiw	r24, 0x01	; 1
 3d6:	3c 01       	movw	r6, r24
 3d8:	f6 01       	movw	r30, r12
 3da:	93 81       	ldd	r25, Z+3	; 0x03
 3dc:	f7 01       	movw	r30, r14
 3de:	93 fd       	sbrc	r25, 3
 3e0:	85 91       	lpm	r24, Z+
 3e2:	93 ff       	sbrs	r25, 3
 3e4:	81 91       	ld	r24, Z+
 3e6:	7f 01       	movw	r14, r30
 3e8:	88 23       	and	r24, r24
 3ea:	09 f4       	brne	.+2      	; 0x3ee <vfprintf+0x62>
 3ec:	ad c1       	rjmp	.+858    	; 0x748 <__LOCK_REGION_LENGTH__+0x348>
 3ee:	85 32       	cpi	r24, 0x25	; 37
 3f0:	39 f4       	brne	.+14     	; 0x400 <__LOCK_REGION_LENGTH__>
 3f2:	93 fd       	sbrc	r25, 3
 3f4:	85 91       	lpm	r24, Z+
 3f6:	93 ff       	sbrs	r25, 3
 3f8:	81 91       	ld	r24, Z+
 3fa:	7f 01       	movw	r14, r30
 3fc:	85 32       	cpi	r24, 0x25	; 37
 3fe:	21 f4       	brne	.+8      	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 400:	b6 01       	movw	r22, r12
 402:	90 e0       	ldi	r25, 0x00	; 0
 404:	d6 d1       	rcall	.+940    	; 0x7b2 <fputc>
 406:	e8 cf       	rjmp	.-48     	; 0x3d8 <vfprintf+0x4c>
 408:	91 2c       	mov	r9, r1
 40a:	21 2c       	mov	r2, r1
 40c:	31 2c       	mov	r3, r1
 40e:	ff e1       	ldi	r31, 0x1F	; 31
 410:	f3 15       	cp	r31, r3
 412:	d8 f0       	brcs	.+54     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 414:	8b 32       	cpi	r24, 0x2B	; 43
 416:	79 f0       	breq	.+30     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 418:	38 f4       	brcc	.+14     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 41a:	80 32       	cpi	r24, 0x20	; 32
 41c:	79 f0       	breq	.+30     	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
 41e:	83 32       	cpi	r24, 0x23	; 35
 420:	a1 f4       	brne	.+40     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 422:	23 2d       	mov	r18, r3
 424:	20 61       	ori	r18, 0x10	; 16
 426:	1d c0       	rjmp	.+58     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 428:	8d 32       	cpi	r24, 0x2D	; 45
 42a:	61 f0       	breq	.+24     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 42c:	80 33       	cpi	r24, 0x30	; 48
 42e:	69 f4       	brne	.+26     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 430:	23 2d       	mov	r18, r3
 432:	21 60       	ori	r18, 0x01	; 1
 434:	16 c0       	rjmp	.+44     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
 436:	83 2d       	mov	r24, r3
 438:	82 60       	ori	r24, 0x02	; 2
 43a:	38 2e       	mov	r3, r24
 43c:	e3 2d       	mov	r30, r3
 43e:	e4 60       	ori	r30, 0x04	; 4
 440:	3e 2e       	mov	r3, r30
 442:	2a c0       	rjmp	.+84     	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
 444:	f3 2d       	mov	r31, r3
 446:	f8 60       	ori	r31, 0x08	; 8
 448:	1d c0       	rjmp	.+58     	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 44a:	37 fc       	sbrc	r3, 7
 44c:	2d c0       	rjmp	.+90     	; 0x4a8 <__LOCK_REGION_LENGTH__+0xa8>
 44e:	20 ed       	ldi	r18, 0xD0	; 208
 450:	28 0f       	add	r18, r24
 452:	2a 30       	cpi	r18, 0x0A	; 10
 454:	40 f0       	brcs	.+16     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 456:	8e 32       	cpi	r24, 0x2E	; 46
 458:	b9 f4       	brne	.+46     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 45a:	36 fc       	sbrc	r3, 6
 45c:	75 c1       	rjmp	.+746    	; 0x748 <__LOCK_REGION_LENGTH__+0x348>
 45e:	23 2d       	mov	r18, r3
 460:	20 64       	ori	r18, 0x40	; 64
 462:	32 2e       	mov	r3, r18
 464:	19 c0       	rjmp	.+50     	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
 466:	36 fe       	sbrs	r3, 6
 468:	06 c0       	rjmp	.+12     	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
 46a:	8a e0       	ldi	r24, 0x0A	; 10
 46c:	98 9e       	mul	r9, r24
 46e:	20 0d       	add	r18, r0
 470:	11 24       	eor	r1, r1
 472:	92 2e       	mov	r9, r18
 474:	11 c0       	rjmp	.+34     	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
 476:	ea e0       	ldi	r30, 0x0A	; 10
 478:	2e 9e       	mul	r2, r30
 47a:	20 0d       	add	r18, r0
 47c:	11 24       	eor	r1, r1
 47e:	22 2e       	mov	r2, r18
 480:	f3 2d       	mov	r31, r3
 482:	f0 62       	ori	r31, 0x20	; 32
 484:	3f 2e       	mov	r3, r31
 486:	08 c0       	rjmp	.+16     	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
 488:	8c 36       	cpi	r24, 0x6C	; 108
 48a:	21 f4       	brne	.+8      	; 0x494 <__LOCK_REGION_LENGTH__+0x94>
 48c:	83 2d       	mov	r24, r3
 48e:	80 68       	ori	r24, 0x80	; 128
 490:	38 2e       	mov	r3, r24
 492:	02 c0       	rjmp	.+4      	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
 494:	88 36       	cpi	r24, 0x68	; 104
 496:	41 f4       	brne	.+16     	; 0x4a8 <__LOCK_REGION_LENGTH__+0xa8>
 498:	f7 01       	movw	r30, r14
 49a:	93 fd       	sbrc	r25, 3
 49c:	85 91       	lpm	r24, Z+
 49e:	93 ff       	sbrs	r25, 3
 4a0:	81 91       	ld	r24, Z+
 4a2:	7f 01       	movw	r14, r30
 4a4:	81 11       	cpse	r24, r1
 4a6:	b3 cf       	rjmp	.-154    	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 4a8:	98 2f       	mov	r25, r24
 4aa:	9f 7d       	andi	r25, 0xDF	; 223
 4ac:	95 54       	subi	r25, 0x45	; 69
 4ae:	93 30       	cpi	r25, 0x03	; 3
 4b0:	28 f4       	brcc	.+10     	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
 4b2:	0c 5f       	subi	r16, 0xFC	; 252
 4b4:	1f 4f       	sbci	r17, 0xFF	; 255
 4b6:	9f e3       	ldi	r25, 0x3F	; 63
 4b8:	99 83       	std	Y+1, r25	; 0x01
 4ba:	0d c0       	rjmp	.+26     	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
 4bc:	83 36       	cpi	r24, 0x63	; 99
 4be:	31 f0       	breq	.+12     	; 0x4cc <__LOCK_REGION_LENGTH__+0xcc>
 4c0:	83 37       	cpi	r24, 0x73	; 115
 4c2:	71 f0       	breq	.+28     	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 4c4:	83 35       	cpi	r24, 0x53	; 83
 4c6:	09 f0       	breq	.+2      	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 4c8:	55 c0       	rjmp	.+170    	; 0x574 <__LOCK_REGION_LENGTH__+0x174>
 4ca:	20 c0       	rjmp	.+64     	; 0x50c <__LOCK_REGION_LENGTH__+0x10c>
 4cc:	f8 01       	movw	r30, r16
 4ce:	80 81       	ld	r24, Z
 4d0:	89 83       	std	Y+1, r24	; 0x01
 4d2:	0e 5f       	subi	r16, 0xFE	; 254
 4d4:	1f 4f       	sbci	r17, 0xFF	; 255
 4d6:	88 24       	eor	r8, r8
 4d8:	83 94       	inc	r8
 4da:	91 2c       	mov	r9, r1
 4dc:	53 01       	movw	r10, r6
 4de:	12 c0       	rjmp	.+36     	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
 4e0:	28 01       	movw	r4, r16
 4e2:	f2 e0       	ldi	r31, 0x02	; 2
 4e4:	4f 0e       	add	r4, r31
 4e6:	51 1c       	adc	r5, r1
 4e8:	f8 01       	movw	r30, r16
 4ea:	a0 80       	ld	r10, Z
 4ec:	b1 80       	ldd	r11, Z+1	; 0x01
 4ee:	36 fe       	sbrs	r3, 6
 4f0:	03 c0       	rjmp	.+6      	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
 4f2:	69 2d       	mov	r22, r9
 4f4:	70 e0       	ldi	r23, 0x00	; 0
 4f6:	02 c0       	rjmp	.+4      	; 0x4fc <__LOCK_REGION_LENGTH__+0xfc>
 4f8:	6f ef       	ldi	r22, 0xFF	; 255
 4fa:	7f ef       	ldi	r23, 0xFF	; 255
 4fc:	c5 01       	movw	r24, r10
 4fe:	4e d1       	rcall	.+668    	; 0x79c <strnlen>
 500:	4c 01       	movw	r8, r24
 502:	82 01       	movw	r16, r4
 504:	f3 2d       	mov	r31, r3
 506:	ff 77       	andi	r31, 0x7F	; 127
 508:	3f 2e       	mov	r3, r31
 50a:	15 c0       	rjmp	.+42     	; 0x536 <__LOCK_REGION_LENGTH__+0x136>
 50c:	28 01       	movw	r4, r16
 50e:	22 e0       	ldi	r18, 0x02	; 2
 510:	42 0e       	add	r4, r18
 512:	51 1c       	adc	r5, r1
 514:	f8 01       	movw	r30, r16
 516:	a0 80       	ld	r10, Z
 518:	b1 80       	ldd	r11, Z+1	; 0x01
 51a:	36 fe       	sbrs	r3, 6
 51c:	03 c0       	rjmp	.+6      	; 0x524 <__LOCK_REGION_LENGTH__+0x124>
 51e:	69 2d       	mov	r22, r9
 520:	70 e0       	ldi	r23, 0x00	; 0
 522:	02 c0       	rjmp	.+4      	; 0x528 <__LOCK_REGION_LENGTH__+0x128>
 524:	6f ef       	ldi	r22, 0xFF	; 255
 526:	7f ef       	ldi	r23, 0xFF	; 255
 528:	c5 01       	movw	r24, r10
 52a:	2d d1       	rcall	.+602    	; 0x786 <strnlen_P>
 52c:	4c 01       	movw	r8, r24
 52e:	f3 2d       	mov	r31, r3
 530:	f0 68       	ori	r31, 0x80	; 128
 532:	3f 2e       	mov	r3, r31
 534:	82 01       	movw	r16, r4
 536:	33 fc       	sbrc	r3, 3
 538:	19 c0       	rjmp	.+50     	; 0x56c <__LOCK_REGION_LENGTH__+0x16c>
 53a:	82 2d       	mov	r24, r2
 53c:	90 e0       	ldi	r25, 0x00	; 0
 53e:	88 16       	cp	r8, r24
 540:	99 06       	cpc	r9, r25
 542:	a0 f4       	brcc	.+40     	; 0x56c <__LOCK_REGION_LENGTH__+0x16c>
 544:	b6 01       	movw	r22, r12
 546:	80 e2       	ldi	r24, 0x20	; 32
 548:	90 e0       	ldi	r25, 0x00	; 0
 54a:	33 d1       	rcall	.+614    	; 0x7b2 <fputc>
 54c:	2a 94       	dec	r2
 54e:	f5 cf       	rjmp	.-22     	; 0x53a <__LOCK_REGION_LENGTH__+0x13a>
 550:	f5 01       	movw	r30, r10
 552:	37 fc       	sbrc	r3, 7
 554:	85 91       	lpm	r24, Z+
 556:	37 fe       	sbrs	r3, 7
 558:	81 91       	ld	r24, Z+
 55a:	5f 01       	movw	r10, r30
 55c:	b6 01       	movw	r22, r12
 55e:	90 e0       	ldi	r25, 0x00	; 0
 560:	28 d1       	rcall	.+592    	; 0x7b2 <fputc>
 562:	21 10       	cpse	r2, r1
 564:	2a 94       	dec	r2
 566:	21 e0       	ldi	r18, 0x01	; 1
 568:	82 1a       	sub	r8, r18
 56a:	91 08       	sbc	r9, r1
 56c:	81 14       	cp	r8, r1
 56e:	91 04       	cpc	r9, r1
 570:	79 f7       	brne	.-34     	; 0x550 <__LOCK_REGION_LENGTH__+0x150>
 572:	e1 c0       	rjmp	.+450    	; 0x736 <__LOCK_REGION_LENGTH__+0x336>
 574:	84 36       	cpi	r24, 0x64	; 100
 576:	11 f0       	breq	.+4      	; 0x57c <__LOCK_REGION_LENGTH__+0x17c>
 578:	89 36       	cpi	r24, 0x69	; 105
 57a:	39 f5       	brne	.+78     	; 0x5ca <__LOCK_REGION_LENGTH__+0x1ca>
 57c:	f8 01       	movw	r30, r16
 57e:	37 fe       	sbrs	r3, 7
 580:	07 c0       	rjmp	.+14     	; 0x590 <__LOCK_REGION_LENGTH__+0x190>
 582:	60 81       	ld	r22, Z
 584:	71 81       	ldd	r23, Z+1	; 0x01
 586:	82 81       	ldd	r24, Z+2	; 0x02
 588:	93 81       	ldd	r25, Z+3	; 0x03
 58a:	0c 5f       	subi	r16, 0xFC	; 252
 58c:	1f 4f       	sbci	r17, 0xFF	; 255
 58e:	08 c0       	rjmp	.+16     	; 0x5a0 <__LOCK_REGION_LENGTH__+0x1a0>
 590:	60 81       	ld	r22, Z
 592:	71 81       	ldd	r23, Z+1	; 0x01
 594:	07 2e       	mov	r0, r23
 596:	00 0c       	add	r0, r0
 598:	88 0b       	sbc	r24, r24
 59a:	99 0b       	sbc	r25, r25
 59c:	0e 5f       	subi	r16, 0xFE	; 254
 59e:	1f 4f       	sbci	r17, 0xFF	; 255
 5a0:	f3 2d       	mov	r31, r3
 5a2:	ff 76       	andi	r31, 0x6F	; 111
 5a4:	3f 2e       	mov	r3, r31
 5a6:	97 ff       	sbrs	r25, 7
 5a8:	09 c0       	rjmp	.+18     	; 0x5bc <__LOCK_REGION_LENGTH__+0x1bc>
 5aa:	90 95       	com	r25
 5ac:	80 95       	com	r24
 5ae:	70 95       	com	r23
 5b0:	61 95       	neg	r22
 5b2:	7f 4f       	sbci	r23, 0xFF	; 255
 5b4:	8f 4f       	sbci	r24, 0xFF	; 255
 5b6:	9f 4f       	sbci	r25, 0xFF	; 255
 5b8:	f0 68       	ori	r31, 0x80	; 128
 5ba:	3f 2e       	mov	r3, r31
 5bc:	2a e0       	ldi	r18, 0x0A	; 10
 5be:	30 e0       	ldi	r19, 0x00	; 0
 5c0:	a3 01       	movw	r20, r6
 5c2:	33 d1       	rcall	.+614    	; 0x82a <__ultoa_invert>
 5c4:	88 2e       	mov	r8, r24
 5c6:	86 18       	sub	r8, r6
 5c8:	44 c0       	rjmp	.+136    	; 0x652 <__LOCK_REGION_LENGTH__+0x252>
 5ca:	85 37       	cpi	r24, 0x75	; 117
 5cc:	31 f4       	brne	.+12     	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>
 5ce:	23 2d       	mov	r18, r3
 5d0:	2f 7e       	andi	r18, 0xEF	; 239
 5d2:	b2 2e       	mov	r11, r18
 5d4:	2a e0       	ldi	r18, 0x0A	; 10
 5d6:	30 e0       	ldi	r19, 0x00	; 0
 5d8:	25 c0       	rjmp	.+74     	; 0x624 <__LOCK_REGION_LENGTH__+0x224>
 5da:	93 2d       	mov	r25, r3
 5dc:	99 7f       	andi	r25, 0xF9	; 249
 5de:	b9 2e       	mov	r11, r25
 5e0:	8f 36       	cpi	r24, 0x6F	; 111
 5e2:	c1 f0       	breq	.+48     	; 0x614 <__LOCK_REGION_LENGTH__+0x214>
 5e4:	18 f4       	brcc	.+6      	; 0x5ec <__LOCK_REGION_LENGTH__+0x1ec>
 5e6:	88 35       	cpi	r24, 0x58	; 88
 5e8:	79 f0       	breq	.+30     	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
 5ea:	ae c0       	rjmp	.+348    	; 0x748 <__LOCK_REGION_LENGTH__+0x348>
 5ec:	80 37       	cpi	r24, 0x70	; 112
 5ee:	19 f0       	breq	.+6      	; 0x5f6 <__LOCK_REGION_LENGTH__+0x1f6>
 5f0:	88 37       	cpi	r24, 0x78	; 120
 5f2:	21 f0       	breq	.+8      	; 0x5fc <__LOCK_REGION_LENGTH__+0x1fc>
 5f4:	a9 c0       	rjmp	.+338    	; 0x748 <__LOCK_REGION_LENGTH__+0x348>
 5f6:	e9 2f       	mov	r30, r25
 5f8:	e0 61       	ori	r30, 0x10	; 16
 5fa:	be 2e       	mov	r11, r30
 5fc:	b4 fe       	sbrs	r11, 4
 5fe:	0d c0       	rjmp	.+26     	; 0x61a <__LOCK_REGION_LENGTH__+0x21a>
 600:	fb 2d       	mov	r31, r11
 602:	f4 60       	ori	r31, 0x04	; 4
 604:	bf 2e       	mov	r11, r31
 606:	09 c0       	rjmp	.+18     	; 0x61a <__LOCK_REGION_LENGTH__+0x21a>
 608:	34 fe       	sbrs	r3, 4
 60a:	0a c0       	rjmp	.+20     	; 0x620 <__LOCK_REGION_LENGTH__+0x220>
 60c:	29 2f       	mov	r18, r25
 60e:	26 60       	ori	r18, 0x06	; 6
 610:	b2 2e       	mov	r11, r18
 612:	06 c0       	rjmp	.+12     	; 0x620 <__LOCK_REGION_LENGTH__+0x220>
 614:	28 e0       	ldi	r18, 0x08	; 8
 616:	30 e0       	ldi	r19, 0x00	; 0
 618:	05 c0       	rjmp	.+10     	; 0x624 <__LOCK_REGION_LENGTH__+0x224>
 61a:	20 e1       	ldi	r18, 0x10	; 16
 61c:	30 e0       	ldi	r19, 0x00	; 0
 61e:	02 c0       	rjmp	.+4      	; 0x624 <__LOCK_REGION_LENGTH__+0x224>
 620:	20 e1       	ldi	r18, 0x10	; 16
 622:	32 e0       	ldi	r19, 0x02	; 2
 624:	f8 01       	movw	r30, r16
 626:	b7 fe       	sbrs	r11, 7
 628:	07 c0       	rjmp	.+14     	; 0x638 <__LOCK_REGION_LENGTH__+0x238>
 62a:	60 81       	ld	r22, Z
 62c:	71 81       	ldd	r23, Z+1	; 0x01
 62e:	82 81       	ldd	r24, Z+2	; 0x02
 630:	93 81       	ldd	r25, Z+3	; 0x03
 632:	0c 5f       	subi	r16, 0xFC	; 252
 634:	1f 4f       	sbci	r17, 0xFF	; 255
 636:	06 c0       	rjmp	.+12     	; 0x644 <__LOCK_REGION_LENGTH__+0x244>
 638:	60 81       	ld	r22, Z
 63a:	71 81       	ldd	r23, Z+1	; 0x01
 63c:	80 e0       	ldi	r24, 0x00	; 0
 63e:	90 e0       	ldi	r25, 0x00	; 0
 640:	0e 5f       	subi	r16, 0xFE	; 254
 642:	1f 4f       	sbci	r17, 0xFF	; 255
 644:	a3 01       	movw	r20, r6
 646:	f1 d0       	rcall	.+482    	; 0x82a <__ultoa_invert>
 648:	88 2e       	mov	r8, r24
 64a:	86 18       	sub	r8, r6
 64c:	fb 2d       	mov	r31, r11
 64e:	ff 77       	andi	r31, 0x7F	; 127
 650:	3f 2e       	mov	r3, r31
 652:	36 fe       	sbrs	r3, 6
 654:	0d c0       	rjmp	.+26     	; 0x670 <__LOCK_REGION_LENGTH__+0x270>
 656:	23 2d       	mov	r18, r3
 658:	2e 7f       	andi	r18, 0xFE	; 254
 65a:	a2 2e       	mov	r10, r18
 65c:	89 14       	cp	r8, r9
 65e:	58 f4       	brcc	.+22     	; 0x676 <__LOCK_REGION_LENGTH__+0x276>
 660:	34 fe       	sbrs	r3, 4
 662:	0b c0       	rjmp	.+22     	; 0x67a <__LOCK_REGION_LENGTH__+0x27a>
 664:	32 fc       	sbrc	r3, 2
 666:	09 c0       	rjmp	.+18     	; 0x67a <__LOCK_REGION_LENGTH__+0x27a>
 668:	83 2d       	mov	r24, r3
 66a:	8e 7e       	andi	r24, 0xEE	; 238
 66c:	a8 2e       	mov	r10, r24
 66e:	05 c0       	rjmp	.+10     	; 0x67a <__LOCK_REGION_LENGTH__+0x27a>
 670:	b8 2c       	mov	r11, r8
 672:	a3 2c       	mov	r10, r3
 674:	03 c0       	rjmp	.+6      	; 0x67c <__LOCK_REGION_LENGTH__+0x27c>
 676:	b8 2c       	mov	r11, r8
 678:	01 c0       	rjmp	.+2      	; 0x67c <__LOCK_REGION_LENGTH__+0x27c>
 67a:	b9 2c       	mov	r11, r9
 67c:	a4 fe       	sbrs	r10, 4
 67e:	0f c0       	rjmp	.+30     	; 0x69e <__LOCK_REGION_LENGTH__+0x29e>
 680:	fe 01       	movw	r30, r28
 682:	e8 0d       	add	r30, r8
 684:	f1 1d       	adc	r31, r1
 686:	80 81       	ld	r24, Z
 688:	80 33       	cpi	r24, 0x30	; 48
 68a:	21 f4       	brne	.+8      	; 0x694 <__LOCK_REGION_LENGTH__+0x294>
 68c:	9a 2d       	mov	r25, r10
 68e:	99 7e       	andi	r25, 0xE9	; 233
 690:	a9 2e       	mov	r10, r25
 692:	09 c0       	rjmp	.+18     	; 0x6a6 <__LOCK_REGION_LENGTH__+0x2a6>
 694:	a2 fe       	sbrs	r10, 2
 696:	06 c0       	rjmp	.+12     	; 0x6a4 <__LOCK_REGION_LENGTH__+0x2a4>
 698:	b3 94       	inc	r11
 69a:	b3 94       	inc	r11
 69c:	04 c0       	rjmp	.+8      	; 0x6a6 <__LOCK_REGION_LENGTH__+0x2a6>
 69e:	8a 2d       	mov	r24, r10
 6a0:	86 78       	andi	r24, 0x86	; 134
 6a2:	09 f0       	breq	.+2      	; 0x6a6 <__LOCK_REGION_LENGTH__+0x2a6>
 6a4:	b3 94       	inc	r11
 6a6:	a3 fc       	sbrc	r10, 3
 6a8:	10 c0       	rjmp	.+32     	; 0x6ca <__LOCK_REGION_LENGTH__+0x2ca>
 6aa:	a0 fe       	sbrs	r10, 0
 6ac:	06 c0       	rjmp	.+12     	; 0x6ba <__LOCK_REGION_LENGTH__+0x2ba>
 6ae:	b2 14       	cp	r11, r2
 6b0:	80 f4       	brcc	.+32     	; 0x6d2 <__LOCK_REGION_LENGTH__+0x2d2>
 6b2:	28 0c       	add	r2, r8
 6b4:	92 2c       	mov	r9, r2
 6b6:	9b 18       	sub	r9, r11
 6b8:	0d c0       	rjmp	.+26     	; 0x6d4 <__LOCK_REGION_LENGTH__+0x2d4>
 6ba:	b2 14       	cp	r11, r2
 6bc:	58 f4       	brcc	.+22     	; 0x6d4 <__LOCK_REGION_LENGTH__+0x2d4>
 6be:	b6 01       	movw	r22, r12
 6c0:	80 e2       	ldi	r24, 0x20	; 32
 6c2:	90 e0       	ldi	r25, 0x00	; 0
 6c4:	76 d0       	rcall	.+236    	; 0x7b2 <fputc>
 6c6:	b3 94       	inc	r11
 6c8:	f8 cf       	rjmp	.-16     	; 0x6ba <__LOCK_REGION_LENGTH__+0x2ba>
 6ca:	b2 14       	cp	r11, r2
 6cc:	18 f4       	brcc	.+6      	; 0x6d4 <__LOCK_REGION_LENGTH__+0x2d4>
 6ce:	2b 18       	sub	r2, r11
 6d0:	02 c0       	rjmp	.+4      	; 0x6d6 <__LOCK_REGION_LENGTH__+0x2d6>
 6d2:	98 2c       	mov	r9, r8
 6d4:	21 2c       	mov	r2, r1
 6d6:	a4 fe       	sbrs	r10, 4
 6d8:	0f c0       	rjmp	.+30     	; 0x6f8 <__LOCK_REGION_LENGTH__+0x2f8>
 6da:	b6 01       	movw	r22, r12
 6dc:	80 e3       	ldi	r24, 0x30	; 48
 6de:	90 e0       	ldi	r25, 0x00	; 0
 6e0:	68 d0       	rcall	.+208    	; 0x7b2 <fputc>
 6e2:	a2 fe       	sbrs	r10, 2
 6e4:	16 c0       	rjmp	.+44     	; 0x712 <__LOCK_REGION_LENGTH__+0x312>
 6e6:	a1 fc       	sbrc	r10, 1
 6e8:	03 c0       	rjmp	.+6      	; 0x6f0 <__LOCK_REGION_LENGTH__+0x2f0>
 6ea:	88 e7       	ldi	r24, 0x78	; 120
 6ec:	90 e0       	ldi	r25, 0x00	; 0
 6ee:	02 c0       	rjmp	.+4      	; 0x6f4 <__LOCK_REGION_LENGTH__+0x2f4>
 6f0:	88 e5       	ldi	r24, 0x58	; 88
 6f2:	90 e0       	ldi	r25, 0x00	; 0
 6f4:	b6 01       	movw	r22, r12
 6f6:	0c c0       	rjmp	.+24     	; 0x710 <__LOCK_REGION_LENGTH__+0x310>
 6f8:	8a 2d       	mov	r24, r10
 6fa:	86 78       	andi	r24, 0x86	; 134
 6fc:	51 f0       	breq	.+20     	; 0x712 <__LOCK_REGION_LENGTH__+0x312>
 6fe:	a1 fe       	sbrs	r10, 1
 700:	02 c0       	rjmp	.+4      	; 0x706 <__LOCK_REGION_LENGTH__+0x306>
 702:	8b e2       	ldi	r24, 0x2B	; 43
 704:	01 c0       	rjmp	.+2      	; 0x708 <__LOCK_REGION_LENGTH__+0x308>
 706:	80 e2       	ldi	r24, 0x20	; 32
 708:	a7 fc       	sbrc	r10, 7
 70a:	8d e2       	ldi	r24, 0x2D	; 45
 70c:	b6 01       	movw	r22, r12
 70e:	90 e0       	ldi	r25, 0x00	; 0
 710:	50 d0       	rcall	.+160    	; 0x7b2 <fputc>
 712:	89 14       	cp	r8, r9
 714:	30 f4       	brcc	.+12     	; 0x722 <__LOCK_REGION_LENGTH__+0x322>
 716:	b6 01       	movw	r22, r12
 718:	80 e3       	ldi	r24, 0x30	; 48
 71a:	90 e0       	ldi	r25, 0x00	; 0
 71c:	4a d0       	rcall	.+148    	; 0x7b2 <fputc>
 71e:	9a 94       	dec	r9
 720:	f8 cf       	rjmp	.-16     	; 0x712 <__LOCK_REGION_LENGTH__+0x312>
 722:	8a 94       	dec	r8
 724:	f3 01       	movw	r30, r6
 726:	e8 0d       	add	r30, r8
 728:	f1 1d       	adc	r31, r1
 72a:	80 81       	ld	r24, Z
 72c:	b6 01       	movw	r22, r12
 72e:	90 e0       	ldi	r25, 0x00	; 0
 730:	40 d0       	rcall	.+128    	; 0x7b2 <fputc>
 732:	81 10       	cpse	r8, r1
 734:	f6 cf       	rjmp	.-20     	; 0x722 <__LOCK_REGION_LENGTH__+0x322>
 736:	22 20       	and	r2, r2
 738:	09 f4       	brne	.+2      	; 0x73c <__LOCK_REGION_LENGTH__+0x33c>
 73a:	4e ce       	rjmp	.-868    	; 0x3d8 <vfprintf+0x4c>
 73c:	b6 01       	movw	r22, r12
 73e:	80 e2       	ldi	r24, 0x20	; 32
 740:	90 e0       	ldi	r25, 0x00	; 0
 742:	37 d0       	rcall	.+110    	; 0x7b2 <fputc>
 744:	2a 94       	dec	r2
 746:	f7 cf       	rjmp	.-18     	; 0x736 <__LOCK_REGION_LENGTH__+0x336>
 748:	f6 01       	movw	r30, r12
 74a:	86 81       	ldd	r24, Z+6	; 0x06
 74c:	97 81       	ldd	r25, Z+7	; 0x07
 74e:	02 c0       	rjmp	.+4      	; 0x754 <__LOCK_REGION_LENGTH__+0x354>
 750:	8f ef       	ldi	r24, 0xFF	; 255
 752:	9f ef       	ldi	r25, 0xFF	; 255
 754:	2b 96       	adiw	r28, 0x0b	; 11
 756:	0f b6       	in	r0, 0x3f	; 63
 758:	f8 94       	cli
 75a:	de bf       	out	0x3e, r29	; 62
 75c:	0f be       	out	0x3f, r0	; 63
 75e:	cd bf       	out	0x3d, r28	; 61
 760:	df 91       	pop	r29
 762:	cf 91       	pop	r28
 764:	1f 91       	pop	r17
 766:	0f 91       	pop	r16
 768:	ff 90       	pop	r15
 76a:	ef 90       	pop	r14
 76c:	df 90       	pop	r13
 76e:	cf 90       	pop	r12
 770:	bf 90       	pop	r11
 772:	af 90       	pop	r10
 774:	9f 90       	pop	r9
 776:	8f 90       	pop	r8
 778:	7f 90       	pop	r7
 77a:	6f 90       	pop	r6
 77c:	5f 90       	pop	r5
 77e:	4f 90       	pop	r4
 780:	3f 90       	pop	r3
 782:	2f 90       	pop	r2
 784:	08 95       	ret

00000786 <strnlen_P>:
 786:	fc 01       	movw	r30, r24
 788:	05 90       	lpm	r0, Z+
 78a:	61 50       	subi	r22, 0x01	; 1
 78c:	70 40       	sbci	r23, 0x00	; 0
 78e:	01 10       	cpse	r0, r1
 790:	d8 f7       	brcc	.-10     	; 0x788 <strnlen_P+0x2>
 792:	80 95       	com	r24
 794:	90 95       	com	r25
 796:	8e 0f       	add	r24, r30
 798:	9f 1f       	adc	r25, r31
 79a:	08 95       	ret

0000079c <strnlen>:
 79c:	fc 01       	movw	r30, r24
 79e:	61 50       	subi	r22, 0x01	; 1
 7a0:	70 40       	sbci	r23, 0x00	; 0
 7a2:	01 90       	ld	r0, Z+
 7a4:	01 10       	cpse	r0, r1
 7a6:	d8 f7       	brcc	.-10     	; 0x79e <strnlen+0x2>
 7a8:	80 95       	com	r24
 7aa:	90 95       	com	r25
 7ac:	8e 0f       	add	r24, r30
 7ae:	9f 1f       	adc	r25, r31
 7b0:	08 95       	ret

000007b2 <fputc>:
 7b2:	0f 93       	push	r16
 7b4:	1f 93       	push	r17
 7b6:	cf 93       	push	r28
 7b8:	df 93       	push	r29
 7ba:	fb 01       	movw	r30, r22
 7bc:	23 81       	ldd	r18, Z+3	; 0x03
 7be:	21 fd       	sbrc	r18, 1
 7c0:	03 c0       	rjmp	.+6      	; 0x7c8 <fputc+0x16>
 7c2:	8f ef       	ldi	r24, 0xFF	; 255
 7c4:	9f ef       	ldi	r25, 0xFF	; 255
 7c6:	2c c0       	rjmp	.+88     	; 0x820 <fputc+0x6e>
 7c8:	22 ff       	sbrs	r18, 2
 7ca:	16 c0       	rjmp	.+44     	; 0x7f8 <fputc+0x46>
 7cc:	46 81       	ldd	r20, Z+6	; 0x06
 7ce:	57 81       	ldd	r21, Z+7	; 0x07
 7d0:	24 81       	ldd	r18, Z+4	; 0x04
 7d2:	35 81       	ldd	r19, Z+5	; 0x05
 7d4:	42 17       	cp	r20, r18
 7d6:	53 07       	cpc	r21, r19
 7d8:	44 f4       	brge	.+16     	; 0x7ea <fputc+0x38>
 7da:	a0 81       	ld	r26, Z
 7dc:	b1 81       	ldd	r27, Z+1	; 0x01
 7de:	9d 01       	movw	r18, r26
 7e0:	2f 5f       	subi	r18, 0xFF	; 255
 7e2:	3f 4f       	sbci	r19, 0xFF	; 255
 7e4:	31 83       	std	Z+1, r19	; 0x01
 7e6:	20 83       	st	Z, r18
 7e8:	8c 93       	st	X, r24
 7ea:	26 81       	ldd	r18, Z+6	; 0x06
 7ec:	37 81       	ldd	r19, Z+7	; 0x07
 7ee:	2f 5f       	subi	r18, 0xFF	; 255
 7f0:	3f 4f       	sbci	r19, 0xFF	; 255
 7f2:	37 83       	std	Z+7, r19	; 0x07
 7f4:	26 83       	std	Z+6, r18	; 0x06
 7f6:	14 c0       	rjmp	.+40     	; 0x820 <fputc+0x6e>
 7f8:	8b 01       	movw	r16, r22
 7fa:	ec 01       	movw	r28, r24
 7fc:	fb 01       	movw	r30, r22
 7fe:	00 84       	ldd	r0, Z+8	; 0x08
 800:	f1 85       	ldd	r31, Z+9	; 0x09
 802:	e0 2d       	mov	r30, r0
 804:	19 95       	eicall
 806:	89 2b       	or	r24, r25
 808:	e1 f6       	brne	.-72     	; 0x7c2 <fputc+0x10>
 80a:	d8 01       	movw	r26, r16
 80c:	16 96       	adiw	r26, 0x06	; 6
 80e:	8d 91       	ld	r24, X+
 810:	9c 91       	ld	r25, X
 812:	17 97       	sbiw	r26, 0x07	; 7
 814:	01 96       	adiw	r24, 0x01	; 1
 816:	17 96       	adiw	r26, 0x07	; 7
 818:	9c 93       	st	X, r25
 81a:	8e 93       	st	-X, r24
 81c:	16 97       	sbiw	r26, 0x06	; 6
 81e:	ce 01       	movw	r24, r28
 820:	df 91       	pop	r29
 822:	cf 91       	pop	r28
 824:	1f 91       	pop	r17
 826:	0f 91       	pop	r16
 828:	08 95       	ret

0000082a <__ultoa_invert>:
 82a:	fa 01       	movw	r30, r20
 82c:	aa 27       	eor	r26, r26
 82e:	28 30       	cpi	r18, 0x08	; 8
 830:	51 f1       	breq	.+84     	; 0x886 <__ultoa_invert+0x5c>
 832:	20 31       	cpi	r18, 0x10	; 16
 834:	81 f1       	breq	.+96     	; 0x896 <__ultoa_invert+0x6c>
 836:	e8 94       	clt
 838:	6f 93       	push	r22
 83a:	6e 7f       	andi	r22, 0xFE	; 254
 83c:	6e 5f       	subi	r22, 0xFE	; 254
 83e:	7f 4f       	sbci	r23, 0xFF	; 255
 840:	8f 4f       	sbci	r24, 0xFF	; 255
 842:	9f 4f       	sbci	r25, 0xFF	; 255
 844:	af 4f       	sbci	r26, 0xFF	; 255
 846:	b1 e0       	ldi	r27, 0x01	; 1
 848:	3e d0       	rcall	.+124    	; 0x8c6 <__ultoa_invert+0x9c>
 84a:	b4 e0       	ldi	r27, 0x04	; 4
 84c:	3c d0       	rcall	.+120    	; 0x8c6 <__ultoa_invert+0x9c>
 84e:	67 0f       	add	r22, r23
 850:	78 1f       	adc	r23, r24
 852:	89 1f       	adc	r24, r25
 854:	9a 1f       	adc	r25, r26
 856:	a1 1d       	adc	r26, r1
 858:	68 0f       	add	r22, r24
 85a:	79 1f       	adc	r23, r25
 85c:	8a 1f       	adc	r24, r26
 85e:	91 1d       	adc	r25, r1
 860:	a1 1d       	adc	r26, r1
 862:	6a 0f       	add	r22, r26
 864:	71 1d       	adc	r23, r1
 866:	81 1d       	adc	r24, r1
 868:	91 1d       	adc	r25, r1
 86a:	a1 1d       	adc	r26, r1
 86c:	20 d0       	rcall	.+64     	; 0x8ae <__ultoa_invert+0x84>
 86e:	09 f4       	brne	.+2      	; 0x872 <__ultoa_invert+0x48>
 870:	68 94       	set
 872:	3f 91       	pop	r19
 874:	2a e0       	ldi	r18, 0x0A	; 10
 876:	26 9f       	mul	r18, r22
 878:	11 24       	eor	r1, r1
 87a:	30 19       	sub	r19, r0
 87c:	30 5d       	subi	r19, 0xD0	; 208
 87e:	31 93       	st	Z+, r19
 880:	de f6       	brtc	.-74     	; 0x838 <__ultoa_invert+0xe>
 882:	cf 01       	movw	r24, r30
 884:	08 95       	ret
 886:	46 2f       	mov	r20, r22
 888:	47 70       	andi	r20, 0x07	; 7
 88a:	40 5d       	subi	r20, 0xD0	; 208
 88c:	41 93       	st	Z+, r20
 88e:	b3 e0       	ldi	r27, 0x03	; 3
 890:	0f d0       	rcall	.+30     	; 0x8b0 <__ultoa_invert+0x86>
 892:	c9 f7       	brne	.-14     	; 0x886 <__ultoa_invert+0x5c>
 894:	f6 cf       	rjmp	.-20     	; 0x882 <__ultoa_invert+0x58>
 896:	46 2f       	mov	r20, r22
 898:	4f 70       	andi	r20, 0x0F	; 15
 89a:	40 5d       	subi	r20, 0xD0	; 208
 89c:	4a 33       	cpi	r20, 0x3A	; 58
 89e:	18 f0       	brcs	.+6      	; 0x8a6 <__ultoa_invert+0x7c>
 8a0:	49 5d       	subi	r20, 0xD9	; 217
 8a2:	31 fd       	sbrc	r19, 1
 8a4:	40 52       	subi	r20, 0x20	; 32
 8a6:	41 93       	st	Z+, r20
 8a8:	02 d0       	rcall	.+4      	; 0x8ae <__ultoa_invert+0x84>
 8aa:	a9 f7       	brne	.-22     	; 0x896 <__ultoa_invert+0x6c>
 8ac:	ea cf       	rjmp	.-44     	; 0x882 <__ultoa_invert+0x58>
 8ae:	b4 e0       	ldi	r27, 0x04	; 4
 8b0:	a6 95       	lsr	r26
 8b2:	97 95       	ror	r25
 8b4:	87 95       	ror	r24
 8b6:	77 95       	ror	r23
 8b8:	67 95       	ror	r22
 8ba:	ba 95       	dec	r27
 8bc:	c9 f7       	brne	.-14     	; 0x8b0 <__ultoa_invert+0x86>
 8be:	00 97       	sbiw	r24, 0x00	; 0
 8c0:	61 05       	cpc	r22, r1
 8c2:	71 05       	cpc	r23, r1
 8c4:	08 95       	ret
 8c6:	9b 01       	movw	r18, r22
 8c8:	ac 01       	movw	r20, r24
 8ca:	0a 2e       	mov	r0, r26
 8cc:	06 94       	lsr	r0
 8ce:	57 95       	ror	r21
 8d0:	47 95       	ror	r20
 8d2:	37 95       	ror	r19
 8d4:	27 95       	ror	r18
 8d6:	ba 95       	dec	r27
 8d8:	c9 f7       	brne	.-14     	; 0x8cc <__ultoa_invert+0xa2>
 8da:	62 0f       	add	r22, r18
 8dc:	73 1f       	adc	r23, r19
 8de:	84 1f       	adc	r24, r20
 8e0:	95 1f       	adc	r25, r21
 8e2:	a0 1d       	adc	r26, r0
 8e4:	08 95       	ret

000008e6 <_exit>:
 8e6:	f8 94       	cli

000008e8 <__stop_program>:
 8e8:	ff cf       	rjmp	.-2      	; 0x8e8 <__stop_program>
